{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "shell",
      "label": "g++ build active file",
      "command": "/usr/local/bin/g++",
      "args": [
        "-std=c++14",
        "-g",
        "-Wall",
        "-Wextra",
        "-pedantic", 
        "-O2",
        "-Wshadow", 
        "-Wformat=2", 
        "-Wfloat-equal", 
        "-Wconversion",
        "-Wlogical-op",
        "-Wshift-overflow=2",
        "-Wduplicated-cond",
        "-Wcast-qual", 
        "-Wcast-align", 
        "-D_GLIBCXX_DEBUG", 
        "-D_GLIBCXX_DEBUG_PEDANTIC", 
        "-D_FORTIFY_SOURCE=2", 
        "-fsanitize=address", 
        "-fsanitize=undefined", 
        "-fno-sanitize-recover", 
        "-fstack-protector",
        "${file}",
        "-o",
        "${fileDirname}/${fileBasenameNoExtension}"
      ],
      "options": {
        "cwd": "/usr/local/bin"
      },
      "problemMatcher": [
        "$gcc"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "type": "shell",
      "label": "clang++ build active file",
      "command": "clang++",
      "args": [
        "-std=c++14",
        "-stdlib=libc++",
        "-x",
        "c++",
        "-Wall",
        "-Wextra",
        "-pedantic", 
        "-O2",
        "-Wshadow", 
        "-Wformat=2", 
        "-Wfloat-equal", 
        "-Wconversion",
        "-Wlogical-op",
        "-Wshift-overflow=2",
        "-Wduplicated-cond",
        "-Wcast-qual", 
        "-Wcast-align", 
        "-D_GLIBCXX_DEBUG", 
        "-D_GLIBCXX_DEBUG_PEDANTIC", 
        "-D_FORTIFY_SOURCE=2", 
        "-fsanitize=address", 
        "-fsanitize=undefined", 
        "-fno-sanitize-recover", 
        "-fstack-protector",
        "${file}",
        "-o",
        "${fileDirname}/${fileBasenameNoExtension}",
        "--debug"
      ],
      "group": "build"
    },
    {
      "label": "CheckTestCase",
      "type": "shell",
      "command": "cd ${fileDirname} && rm -f ${fileDirname}/${fileBasenameNoExtension} && g++ -std=c++11 ${fileBasename} -o ${fileBasenameNoExtension} && oj test -c \"${fileDirname}/${fileBasenameNoExtension}\" -d ${fileDirname}/tests/",
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    {
      "label": "SubmitCode",
      "type": "shell",
      "command": "cd ${fileDirname} && acc s ${fileBasename}",
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      },
      "group": {
        "kind": "test",
        "isDefault": true
      }
    }
  ]
}
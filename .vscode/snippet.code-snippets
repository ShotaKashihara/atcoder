{
	// Place your atcoder workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"vint": {
		"scope": "cpp",
		"prefix": "vint",
		"body": [
			"vector<int> ${0:a}(100100); // 1e5"
		],
		"description": "vector<int> a(100100)"
	},
	"vvint": {
		"scope": "cpp",
		"prefix": "vvint",
		"body": [
			"vector<vector<int>> ${0:a}(100100, vector<int>(100100));"
		],
		"description": "vector<vector<int>> a(100100, vector<int>(100100))"
	},
	"dptemplate": {
		"scope": "cpp",
		"prefix": "dptemplate",
		"body": [
			"template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }",
			"template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }",
			"const ll INF = 1LL << 60;",
			"const int MAX_ITEM = 10e4+10; // 10^5",
			"ll dp[MAX_ITEM] = {0};",
		],
		"description": "template for DP"
	},
	"深さ優先探索": {
		"scope": "cpp",
		"prefix": "dfstemplate",
		"body": [
			"// ATC001A: https://atcoder.jp/contests/atc001/tasks/dfs_a",
			"// 迷路フィールド",
			"vector<vector<int>> a(510, vector<int>(510));",
			"",
			"int dw[4] = { 1, 0, -1, 0 };",
			"int dh[4] = { 0, 1, 0, -1 };",
			"enum { Barrier, Nothing, Fill, Start, Goal, Failure = 100 };",
			"void dfs(int h, int w) {",
			"\tif (h < 0 || w < 0) return;",
			"\tif (a.at(h).at(w) == Barrier) return; // (w,h) が壁",
			"\tif (a.at(h).at(w) == Fill) return; // (w,h) は到達済み",
			"",
			"\ta.at(h).at(w) = Fill; // 到達",
			"",
			"\trep(i, 4) dfs(h + dh[i], w + dw[i]); // 4方向を試す",
			"}",
			"",
			"int main() {",
			"\tint h,w;",
			"\tcin >> h >> w; // (w,h) ",
			"\tP s,g; // スタート地点, ゴール地点",
			"\trep(_h,h) {",
			"\t\tstring line; // \"s..###\" みたいな文字列",
			"\t\tcin >> line;",
			"\t\trep(_w,w) {",
			"\t\t\tif (line[_w] != '#') a.at(_h).at(_w) = Nothing; // 通れる道をマーキング",
			"\t\t\tif (line[_w] == 's') s = P(_h,_w); // スタート地点",
			"\t\t\tif (line[_w] == 'g') g = P(_h,_w); // ゴール地点",
			"\t\t}",
			"\t}",
			"",
			"\tdfs(s.first, s.second);",
			"",
			"\tif (a.at(g.first).at(g.second) == Fill) cout << \"Yes\" << endl; // ゴール地点が \"Fill\" なら Yes",
			"\telse cout << \"No\" << endl;",
			"",
			"\treturn 0;",
			"}",
		],
		"description": "template for 深さ優先探索"
	}
}
